#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

//     0  1  2  3  4       5  6  7  8  9
//    10 11 12 13 14      15 16 17 18 19
// 20 21 22 23 24 25      26 27 28 29 30 31
//          32 33 34      35 36 37
#define LEFT_KEYS 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 25
#define LEFT_THUMBS 32 33 34
#define RIGHT_KEYS 5 6 7 8 9 15 16 17 18 19 26 27 28 29 30 31
#define RIGHT_THUMBS 35 36 37

#define DEF 0
#define NAV 1
#define SYM 2
#define NUM 3
#define SYS 4

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        sys_layer {
            if-layers = <NAV SYM>;
            then-layer = <SYS>;
        };
    };
};

/ {
    combos { compatible = "zmk,combos"; };

    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM Left";
            #binding-cells = <2>;
            flavor = "balanced"; //produces a "hold" if another key is both pressed and released within the tapping-term.
            require-prior-idle-ms = <150>; // immediately resolves a HRM as "tap" when it is pressed shortly after another key has been tapped.
            tapping-term-ms = <280>; //how long a key must be pressed to trigger the "hold" behavior
            quick-tap-ms = <175>; //If you press a tapped hold-tap again within quick-tap-ms milliseconds of the first press, it will always trigger the tap behavior.
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <RIGHT_KEYS RIGHT_THUMBS>; // List of keys on the right side of the keyboard
            hold-trigger-on-release; //delays the positional-hold-tap decision until the next key's release. With this, mods can be combined when held
        };
        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM Right";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <LEFT_KEYS LEFT_THUMBS>; // List of keys on the left side of the keyboard
            hold-trigger-on-release;
        };
        swapper: swapper {
            compatible = "zmk,behavior-tri-state";
            label = "SWAPPER";
            #binding-cells = <0>;
            bindings = <&kt LALT>, <&kp TAB>, <&kt LALT>;
            ignored-key-positions = <7 13 16 17 18>;
        };
        tabber: tabber {
            compatible = "zmk,behavior-tri-state";
            label = "TABBER";
            #binding-cells = <0>;
            bindings = <&kt LCTRL>, <&kp TAB>, <&kt LCTRL>;
            ignored-key-positions = <13>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
         &kp Q          &kp W        &kp F            &kp P              &kp G             /* | */        &kp J          &kp L              &kp U            &kp Y             &kp SEMI
         &hml LGUI A    &hml LALT R  &hml LCTRL S     &hml LSHIFT T      &kp D             /* | */        &kp H          &hmr LSHIFT N      &hmr LCTRL E     &hmr LALT I       &hmr LGUI O
&kp LBKT &kp Z          &kp X        &kp C            &kp V              &kp B             /* | */        &kp K          &kp M              &kp COMMA        &kp DOT           &kp SLASH        &kp SQT
                                     /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
                                     &kp BSPC          &lt NAV ESC       &kp SPACE         /* | */        &lt NUM TAB    &lt SYM ENTER      &kp DEL
            >;
        };

        navigation_layer {
            bindings = <
         &kp LC(Q)     &kp LC(W)     &kp LC(F)        &kp LC(P)          &tabber            /* | */        &kp PG_UP      &kp HOME           &kp UP          &kp END            &kp LC(SEMI)
         &kp LGUI      &sk LALT      &sk LCTRL        &sk LSHIFT         &kp LC(D)          /* | */        &kp PG_DN      &kp LEFT           &kp DOWN        &kp RIGHT          &kp LC(O)
&trans   &kp LC(Z)     &kp LC(X)     &kp LC(C)        &kp LC(V)          &swapper           /* | */        &kp LC(K)      &kt LC(M)          &kp K_CONTEXT_MENU &kp LC(PERIOD)  &kp LC(SLASH)   &trans
                                     /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
                                     &trans           &trans             &trans             /* | */        &trans         &trans             &trans
            >;
        };

        symbols_layer {
            bindings = <
         &kp EXCL      &kp AT        &kp HASH         &kp DOLLAR         &kp PERCENT        /* | */        &kp CARET      &kp AMPERSAND      &kp STAR          &kp LPAR          &kp RPAR
         &kp EQUAL     &kp PLUS      &kp MINUS        &kp UNDER          &kp LBKT           /* | */        &kp RBKT       &sk LSHIFT         &sk LCTRL         &sk LALT          &kp SQT
&trans   &kp PIPE      &kp GRAVE     &caps_word       &kp LPAR           &kp LBRC           /* | */        &kp RBRC       &kp RPAR           &trans            &kp TILDE         &kp BACKSLASH  &trans
                                     /* - - - - - - - - - - - - - - -  - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
                                     &trans           &trans             &trans             /* | */        &trans         &trans             &trans
            >;
        };

        numbers-fn_layer {
            bindings = <
         &kp F1        &kp F2        &kp F3          &kp F4              &kp F22            /* | */        &kp MINUS      &kp N7            &kp N8            &kp N9            &kp STAR
         &kp F5        &kp F6        &kp F7          &kp F8              &kp F23            /* | */        &kp PLUS       &kp N4            &kp N5            &kp N6            &kp N0
&trans   &kp F9        &kp F10       &kp F11         &kp F12             &kp F24            /* | */        &kp EQUAL      &kp N1            &kp N2            &kp N3            &kp SLASH       &trans
                                     /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
                                     &trans           &trans             &trans             /* | */        &trans         &trans             &trans
            >;
        };

        system-fun_layer {
            bindings = <
         &bt BT_SEL 0  &bt BT_SEL 1   &bt BT_SEL 2    &none              &studio_unlock     /* | */        &kp K_VOL_UP    &none             &kp F20 /* mic */  &none            &none
         &bt BT_CLR    &bt BT_CLR_ALL &none           &none              &ext_power EP_TOG  /* | */        &kp K_MUTE      &kp K_PREV        &kp K_PLAY_PAUSE   &kp K_NEXT       &none
&trans   &sys_reset    &bootloader    &soft_off       &out OUT_USB       &out OUT_BLE       /* | */        &kp K_VOL_DN    &none             &none              &bootloader      &sys_reset     &trans
                                     /* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
                                      &none           &none              &none              /* | */        &none          &none              &none
            >;
        };
    };
};
